const fs = require('fs');
const helpers = require('./helpers');
const maxAdminsCount = 50;
const maxAdminsCountForTesting = 3;
let isTestMode = true;

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —á–∞—Ç–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∞—Ö —á–∞—Ç–∞
let loadChatAdmins = async (bot, chat_id, chat_title) => {

  isTestMode = chat_id == process.env.test_chat_id;

  let admins = [];
  // –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ —á–∞—Ç–∞
  
  let chatAdmins = await bot.telegram.getChatAdministrators(chat_id);
  // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
  chatAdmins.forEach(admin => {
    let user = admin.user;   
    // —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º? (–ù—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–ø–∏—Å–µ–π –≤ —á–∞—Ç–µ)
    let isFictiveAdmin =
      user.is_bot === false &&
      admin.can_change_info === false &&
      admin.can_delete_messages === false &&
      //admin.can_invite_users === false &&
      admin.can_restrict_members === false &&
      admin.can_pin_messages === false &&
      admin.can_manage_topics === false &&
      admin.can_promote_members === false &&
      admin.can_manage_video_chats === false &&
      admin.is_anonymous === false &&
      admin.can_manage_voice_chats === false;

    admins.push({
      id: user.id,
      is_admin: true,
      is_fictive: isFictiveAdmin,
      is_bot: user.is_bot,
      first_name: user.first_name,
      last_name: user.last_name ?? "",
      username: user.username,
      custom_title: admin.custom_title
    });
  });

  helpers.log2(bot, chat_title, "üî• –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ —á–∞—Ç–∞. –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–æ–≤: " + admins.length);

  if (isTestMode) {
    console.log("admins:");
    console.log(admins);
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∞–¥–º–∏–Ω–∞—Ö –≤ users.json
  let file_users = await getUsersFromFile(chat_id); 
  saveAdminsToUsers(admins, file_users);
  await saveUsersToFile(bot, chat_id, chat_title, file_users);
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º —á–∞—Ç–∞ (–ª—é–±—ã–º)
let isAdmin = (file_users, userId) => {
  let result = file_users.find(user => user.id === userId && user.is_admin === true) !== undefined;
  return result;
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–∑–¥–∞–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ users.json
let saveMessagesUserToFile = async (ctx, bot, user) => {

  isTestMode = ctx.chat.id == process.env.test_chat_id;

  let file_users = await getUsersFromFile(ctx.chat.id);  
  let file_user = await saveMessagesUserToUsers(file_users, user);

  if (!file_user.is_admin) {  
    if (file_user.custom_title.length === 0) {
      let message = "‚ö†Ô∏è #–ù—É–∂–Ω–∞–ü–æ–¥–ø–∏—Å—å –í–Ω–∏–º–∞–Ω–∏–µ! –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + helpers.getUserDescription(file_user) + " –Ω–µ –∑–∞–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å—å!";
       helpers.log(ctx, message);
    }   
    await tryToMakeFictiveAdmin(bot, ctx, file_users, file_user);
  }

  await saveUsersToFile(bot, ctx.chat.id, ctx.chat.title, file_users);
}

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞ users.json
async function getUsersFromFile(chat_id) {

  let obj = {
    chat_name: "-",
    users: []
  };

  let fileName = helpers.getFileName(chat_id);

  try {
    if (fs.existsSync(fileName)) {
      const data = fs.readFileSync(fileName);
      obj = JSON.parse(data);
    }
    return obj.users;
  }

  catch (err) {
    console.error(err);
    helpers.log(ctx, err);
    return null;
  }
}

// –ò–∑ –º–∞—Å—Å–∏–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–æ–≤
function getAdminsFromUsers(file_users) {
  return file_users.filter(file_user => file_user.is_admin === true);
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª users.json
async function saveUsersToFile(bot, chat_id, chat_title, users) {

  //let chat_id = ctx.chat.id;
  
  let obj = {
    chat_name: chat_title,
    users: []
  };

  if (users !== undefined && users.length > 0) {

    obj.users = users;

    let json = JSON.stringify(obj);
    fs.writeFile(helpers.getFileName(chat_id), json, function(err) {
      if (err) {
        helpers.log2(bot, chat_title, err);
        return console.log(err);
      }
    });
  }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∞–¥–º–∏–Ω–∞—Ö –≤ –º–∞—Å—Å–∏–≤ users
function saveAdminsToUsers(admins_users, file_users) {

  let file_user;

  admins_users.forEach(admin_user => {

    if (file_users.length > 0) {
      file_user = file_users.find(file_user => file_user.id === admin_user.id);
    }
    // –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–∏–∫–µ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (file_user === undefined) {
      admin_user.messages_count = 0;
      file_users.push(admin_user);
    } else {
      // –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      file_user.first_name = admin_user.first_name;
      file_user.last_name = admin_user.last_name ?? "";
      file_user.username = admin_user.username;
      file_user.is_admin = admin_user.is_admin;
      file_user.is_fictive = admin_user.is_fictive;
      file_user.custom_title = admin_user.custom_title;
    }
  });

  // –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ñ–∞–π–ª–∏–∫–∞ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ–º is_admin = false. –¢–∞–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –±—ã–≤–∞—é—Ç, –∫–æ–≥–¥–∞ –≤ —á–∞—Ç–µ —Ä—É—á–∫–∞–º–∏ –∫—Ç–æ-—Ç–æ —É–¥–∞–ª–∏–ª –∞–¥–º–∏–Ω–∞, –∏ –≤ —Ñ–∞–π–ª–∏–∫–µ —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–æ—Å—å. –ù–∞–¥–æ –∏ –≤ —Ñ–∞–π–ª–∏–∫–µ —É–±—Ä–∞—Ç—å –ø—Ä–∏–∑–Ω–∞–∫ —Ç–æ–≥–æ, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ - –∞–¥–º–∏–Ω.
    file_users.forEach(file_user => {
      let admin_user = admins_users.find(admin_user => admin_user.id === file_user.id);
      if (admin_user === undefined) {
        file_user.is_admin = false;
    } 
  });
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –Ω–∞–ø–∏—Å–∞–≤—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –º–∞—Å—Å–∏–≤ users 
async function saveMessagesUserToUsers(file_users, messagesUser) {

  let file_user;
 
  if (file_users.length > 0) {
    file_user = file_users.find(file_user => file_user.id === messagesUser.id);
  }
  // –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–∏–∫–µ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (file_user === undefined) {
    file_user = messagesUser;
    file_user.messages_count = 1;
    file_user.custom_title = "";
    file_user.is_fictive = true;
    file_user.is_admin = false;
    file_users.push(file_user);
  } else {
    // –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    file_user.first_name = messagesUser.first_name;
    file_user.last_name = messagesUser.last_name ?? "";
    file_user.username = messagesUser.username;
    let is_admin = isAdmin(file_users, messagesUser.id);
    file_user.is_admin = is_admin;
    //file_user.is_fictive = messagesUser.is_fictive;
    file_user.messages_count++;
  }

  return file_user;
}

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –≤ —á–∞—Ç–µ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
async function tryToMakeFictiveAdmin(bot, ctx, file_users, file_user) {
  
  if (file_user.custom_title.length > 0) {

    let log = "üëë #–°—Ç–∞–≤–∏–º–ü–æ–¥–ø–∏—Å—å –ü—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å <b>" + helpers.getUserDescription(file_user) + "</b> –∞–¥–º–∏–Ω–æ–º —Å –ø–æ–¥–ø–∏—Å—å—é <b>'" + file_user.custom_title + "'</b>:";

    let admins = getAdminsFromUsers(file_users);
   
    let updateResult = { result: true, msg: "ok" };
    console.log("isTestMode: "+ isTestMode);
    let maxAdminsCountFact = isTestMode ? maxAdminsCountForTesting : maxAdminsCount;
    // –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–æ–≤ —Ä–∞–≤–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É
    if (admins.length >= maxAdminsCountFact) {
     // —Ç–æ —É–¥–∞–ª—è–µ–º –Ω–∞–∏–º–µ–Ω–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ —á–∞—Ç–∞ –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ
      // –æ—Ç–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
      let fictive_admins = file_users.filter(user => user.is_admin === true && user.is_fictive === true).sort(helpers.compare('messages_count'));
      if (isTestMode) {
        console.log("fictive_admins:");
        console.log(fictive_admins);
      }
   
      // –æ—Ç–±–∏—Ä–∞–µ–º —Å–∞–º–æ–≥–æ "—Å–ª–∞–±–∞–∫–∞" (–ø–µ—Ä–≤—ã–π, —Ä–µ–¥–∫–æ –æ–±—â–∞—é—â–∏–π—Å—è, –≤ —Å–ø–∏—Å–∫–µ —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö)
      let weak_admin = fictive_admins !== undefined && fictive_admins.length > 0 ? fictive_admins[0] : null;      
      // console.log("weak_admin: ");
      // console.log(weak_admin);
      if (weak_admin !== null) {

        log += "\n ‚Ä¢ –ü–æ–ø—ã—Ç–∫–∞ ‚Ññ1 —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ <b>"  + helpers.getUserDescription(weak_admin) + "</b>";
        let updateResult = await updateRightsForUser(ctx, weak_admin.id, false, null);
        console.log(updateResult);

        if (!updateResult.result) {// –µ—Å–ª–∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø—Ä–∏–≤–µ–ª–µ–≥–∏–π –æ–±–ª–æ–º–∏–ª–æ—Å—å, —Å–Ω–æ–≤–∞ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥–º–∏–Ω–∞–º –∏–∑ —á–∞—Ç–∞ (—Ç–∞–∫–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ "—Ä—É—á–∫–∞–º–∏" –∏ –±–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª –∞–¥–º–∏–Ω–æ–≤ –≤ —á–∞—Ç–µ)
          log += "\n ‚Ä¢ –û–®–ò–ë–ö–ê: " + updateResult.msg;
          await loadChatAdmins(bot, ctx.chat.id, ctx.chat.title);
          log += "\n ‚Ä¢ –ü–æ–ø—ã—Ç–∫–∞ ‚Ññ2 —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ <b>" + weak_admin?.first_name + "</b>";
          updateResult = await updateRightsForUser(ctx, weak_admin.id, false, null);
          if (!updateResult.result) {
            log += "\n ‚Ä¢ –û–®–ò–ë–ö–ê: " + updateResult.msg;
          }
        }
   
        if (updateResult.result) {
          weak_admin.is_admin = false;
          weak_admin.is_fictive = true;
          log += "\n ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>" + weak_admin?.first_name + "</b> —É–¥–∞–ª–µ–Ω –∏–∑ –∞–¥–º–∏–Ω–æ–≤ ‚úÖ";    
          admins = admins.filter((item) => item.id !== weak_admin.id);
        }
      }
    }
    if (updateResult.result) {
      // –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–∞–∫–∞ –¥–µ–ª–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º –∞–¥–º–∏–Ω–æ–º
      updateResult = await updateRightsForUser(ctx, file_user.id, true, file_user.custom_title);

      if (updateResult.result) {
        file_user.is_admin = true;
        file_user.is_fictive = true; 
        admins.push(file_user);
        log += "\n ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>"+ file_user.first_name + "</b> —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º –∞–¥–º–∏–Ω–æ–º ‚úÖ";
      }

      log += "\n ‚Ä¢ –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: <b>"+ admins.length + "</b>";

      if (isTestMode) {
        console.log("ALL ADMINS: ");
        console.log(admins);
      }
    }

     helpers.log(ctx, log);
  }
}

// –î–µ–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º –∞–¥–º–∏–Ω–æ–º (–ª–∏–±–æ —É–±–∏—Ä–∞–µ–º –∏–∑ —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤)
let updateRightsForUser = async (ctx, userId, isAdmin, custom_title) => {

  let updateResult = true;
  let chatId = ctx.chat.id;
  let msg = '';
  
  try {
    if (isAdmin) {
     
      // –¥–µ–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º –∞–¥–º–∏–Ω–æ–º 
      await ctx.telegram.promoteChatMember(chatId, userId, {
        —Åan_manage_chat: true,
        can_invite_users: true
      });
     
        let title_result = await ctx.telegram.setChatAdministratorCustomTitle(chatId, userId, custom_title.substring(0,16));
        console.log ("–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–¥–ø–∏—Å–∏: "+ title_result);
        console.log("promote is ok"); 
    } else {
      // —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤
      await ctx.telegram.promoteChatMember(chatId, userId, {
        can_manage_chat: false,
        can_invite_users: false
      });
      console.log("demote is ok");
    }
    msg = "ok";
  } catch (err) {
    console.log(err);
    msg = "‚Äº‚Äº‚Äº " + err;
    updateResult = false;
  }
  return { result: updateResult, msg: msg };
}

module.exports = { loadChatAdmins, saveMessagesUserToFile, updateRightsForUser, getUsersFromFile }